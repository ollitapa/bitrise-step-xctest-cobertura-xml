format_version: "4"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: ""
app:
  envs:
  - BITRISE_STEP_ID: xctest-cobertura-xml
  - BITRISE_STEP_VERSION: 1.1.0
  - BITRISE_STEP_GIT_CLONE_URL: https://github.com/ollitapa/bitrise-step-xctest-cobertura-xml.git
  - MY_STEPLIB_REPO_FORK_GIT_URL: $MY_STEPLIB_REPO_FORK_GIT_URL
workflows:
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml
  share-this-step:
    description: |-
      If this is the first time you try to share a Step you should
      first call: $ bitrise share

      This will print you a guide, and information about how Step sharing
      works. Please read it at least once!

      As noted in the Step sharing guide you'll have to fork the
      StepLib you want to share this step into. Once you're done with forking
      the repository you should set your own fork's git clone URL
      in the `.bitrise.secrets.yml` file, or here in the `envs` section,
      as the value of the `MY_STEPLIB_REPO_FORK_GIT_URL` environment.

      You're now ready to share this Step, just make sure that
      the `BITRISE_STEP_ID` and `BITRISE_STEP_VERSION`
      environments are set to the desired values!

      To share this Step into a StepLib you can just run: $ bitrise run share-this-step

      Once it finishes the only thing left is to actually create a Pull Request,
      the way described in the guide printed at the end of the process.
    before_run:
    - audit-this-step
    envs:
    - MY_STEPLIB_REPO_FORK_GIT_URL: $MY_STEPLIB_REPO_FORK_GIT_URL
    - BITRISE_STEP_ID: $BITRISE_STEP_ID
    - BITRISE_STEP_VERSION: $BITRISE_STEP_VERSION
    - BITRISE_STEP_GIT_CLONE_URL: $BITRISE_STEP_GIT_CLONE_URL
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            bitrise share start -c "${MY_STEPLIB_REPO_FORK_GIT_URL}"
            bitrise share create --stepid "${BITRISE_STEP_ID}" --tag "${BITRISE_STEP_VERSION}" --git "${BITRISE_STEP_GIT_CLONE_URL}"
            bitrise share finish
  test:
    steps:
    - change-workdir:
        title: Switch working dir to test /testing dir
        description: |-
          To prevent step testing issues, like referencing relative
          files with just './some-file' in the step's code, which would
          work for testing the step from this directory directly
          but would break if the step is included in another `bitrise.yml`.
        run_if: "true"
        inputs:
        - path: ./testing
        - is_create_path: true
    - path::./:
        title: Step Test
        run_if: "true"
        inputs:
        - xml_output_dir: ./
        - path_to_xcresult: ./Test-MyProject.xcresult
    - script:
        title: Test that xml is the same as reference
        inputs:
        - content: |-
            #!/bin/bash
            echo "This output was generated by the Step (COVERAGE_JSON_TEST_RESULT_PATH): $COVERAGE_JSON_TEST_RESULT_PATH"
            echo "This output was generated by the Step (COVERAGE_XML_TEST_RESULT_PATH): $COVERAGE_XML_TEST_RESULT_PATH"

            if cmp -s "$COVERAGE_JSON_TEST_RESULT_PATH" "./coverage-reference.json" ; then
               echo "Generated correct coverage json"
            else
               echo "Coverage json does not match reference"
               exit 1
            fi
            # Only on line can differ. It includes a timestamp that changes each time run.
            if [ $(diff -y --suppress-common-lines cobertura.xml cobertura-reference.xml | wc -l) -eq 2 ] ; then
               echo "Generated correct cobertura xml"
            else
               echo "Cobertura xml does not match reference"
               exit 1
            fi
